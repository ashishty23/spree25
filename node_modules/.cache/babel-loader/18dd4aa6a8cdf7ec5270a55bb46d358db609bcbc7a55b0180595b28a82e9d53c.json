{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const LowerObjLine = () => {\n//   const [position, setPosition] = useState(0);\n//   const [reachedPoints, setReachedPoints] = useState([]);\n\n//   const totalPoints = 4;\n//   const lineLength = 1500;\n//   const pointSpacing = lineLength / (totalPoints);\n\n//   // Calculate points along the line\n//   const points = Array.from({ length: totalPoints }, (_, i) => ({\n//     x: i * pointSpacing,\n//     y: i * pointSpacing * [-0.25], // This creates the angle\n//     number: i + 1\n//   }));\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setPosition((prev) => {\n//         if (prev >= lineLength) {\n//           clearInterval(interval);\n//           return prev;\n//         }\n//         return prev + 2;\n//       });\n//     }, 10);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Check if we've reached a new point\n//   useEffect(() => {\n//     points.forEach((point) => {\n//       if (\n//         position >= point.x && \n//         !reachedPoints.includes(point.number)\n//       ) {\n//         setReachedPoints(prev => [...prev, point.number]);\n//       }\n//     });\n//   }, [position, reachedPoints]);\n\n//   return (\n//     <div className=\"relative w-full h-full p-8\">\n\n//       {/*---------------------------------- Lower Part-------------------------------------- */}\n\n//       <div>\n//         {/* Line */}\n//       <div \n//         className=\"absolute w-full h-14 z-[-10] bg-gray-300 \"\n//         style={{ \n//           left:0,\n//           right: 0,\n//           bottom: [2],\n//           transform: 'rotate(-15deg)',\n//           transformOrigin: '0 0',\n//           width: `${lineLength}px`\n//         }}\n//       />\n\n//       {/* Points */}\n//       {points.map((point) => (\n//         <div key={point.number} className=\"absolute\">\n//           {/* Point marker */}\n//           {/* <div \n//             className=\"w-4 h-4 bg-blue-500 rounded-full\"\n//             style={{\n//               left: point.x,\n//               top: point.y\n//             }}\n//           /> */}\n\n//           {/* Point label */}\n//           <div \n//             className=\"absolute text-sm font-bold\"\n//             style={{\n//               left: point.x - 20,\n//               top: point.y - 20\n//             }}\n//           >\n//             {/* Point {point.number} */}\n//           </div>\n\n//           {/* Reached message */}\n//           {reachedPoints.includes(point.number) && (\n//             <div \n//               className=\"absolute bg-green-500 text-white px-2 py-1 rounded\"\n//               style={{\n//                 left: point.x - 30,\n//                 top: point.y + 20\n//               }}\n//             >\n//               REACHED POINT {point.number}\n//             </div>\n//           )}\n//         </div>\n//       ))}\n\n//       {/* Moving object */}\n//       <div \n//         className=\"absolute h-20 w-20 transition-all duration-20 ease-linear \"\n//         style={{\n//           right: position,\n//           bottom: position * [-0.29],\n//           transform: 'translate(50%, 50%)'\n//         }}\n//       >\n//         <img src = \"/assets/auto2.png\" alt='' />\n//       </div>\n\n//       {/* Reset button */}\n//       {/* <button\n//         className=\"absolute top-4 right-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         onClick={() => {\n//           setPosition(0);\n//           setReachedPoints([]);\n//         }}\n//       >\n//         Reset\n//       </button> */}\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default LowerObjLine;","map":{"version":3,"names":[],"sources":["/Users/neeraj/Desktop/animation/my-app/src/LowerObjLine.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const LowerObjLine = () => {\n//   const [position, setPosition] = useState(0);\n//   const [reachedPoints, setReachedPoints] = useState([]);\n  \n//   const totalPoints = 4;\n//   const lineLength = 1500;\n//   const pointSpacing = lineLength / (totalPoints);\n  \n//   // Calculate points along the line\n//   const points = Array.from({ length: totalPoints }, (_, i) => ({\n//     x: i * pointSpacing,\n//     y: i * pointSpacing * [-0.25], // This creates the angle\n//     number: i + 1\n//   }));\n  \n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setPosition((prev) => {\n//         if (prev >= lineLength) {\n//           clearInterval(interval);\n//           return prev;\n//         }\n//         return prev + 2;\n//       });\n//     }, 10);\n\n//     return () => clearInterval(interval);\n//   }, []);\n  \n//   // Check if we've reached a new point\n//   useEffect(() => {\n//     points.forEach((point) => {\n//       if (\n//         position >= point.x && \n//         !reachedPoints.includes(point.number)\n//       ) {\n//         setReachedPoints(prev => [...prev, point.number]);\n//       }\n//     });\n//   }, [position, reachedPoints]);\n\n//   return (\n//     <div className=\"relative w-full h-full p-8\">\n\n//       {/*---------------------------------- Lower Part-------------------------------------- */}\n\n//       <div>\n//         {/* Line */}\n//       <div \n//         className=\"absolute w-full h-14 z-[-10] bg-gray-300 \"\n//         style={{ \n//           left:0,\n//           right: 0,\n//           bottom: [2],\n//           transform: 'rotate(-15deg)',\n//           transformOrigin: '0 0',\n//           width: `${lineLength}px`\n//         }}\n//       />\n      \n//       {/* Points */}\n//       {points.map((point) => (\n//         <div key={point.number} className=\"absolute\">\n//           {/* Point marker */}\n//           {/* <div \n//             className=\"w-4 h-4 bg-blue-500 rounded-full\"\n//             style={{\n//               left: point.x,\n//               top: point.y\n//             }}\n//           /> */}\n          \n//           {/* Point label */}\n//           <div \n//             className=\"absolute text-sm font-bold\"\n//             style={{\n//               left: point.x - 20,\n//               top: point.y - 20\n//             }}\n//           >\n//             {/* Point {point.number} */}\n//           </div>\n          \n//           {/* Reached message */}\n//           {reachedPoints.includes(point.number) && (\n//             <div \n//               className=\"absolute bg-green-500 text-white px-2 py-1 rounded\"\n//               style={{\n//                 left: point.x - 30,\n//                 top: point.y + 20\n//               }}\n//             >\n//               REACHED POINT {point.number}\n//             </div>\n//           )}\n//         </div>\n//       ))}\n      \n//       {/* Moving object */}\n//       <div \n//         className=\"absolute h-20 w-20 transition-all duration-20 ease-linear \"\n//         style={{\n//           right: position,\n//           bottom: position * [-0.29],\n//           transform: 'translate(50%, 50%)'\n//         }}\n//       >\n//         <img src = \"/assets/auto2.png\" alt='' />\n//       </div>\n      \n//       {/* Reset button */}\n//       {/* <button\n//         className=\"absolute top-4 right-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         onClick={() => {\n//           setPosition(0);\n//           setReachedPoints([]);\n//         }}\n//       >\n//         Reset\n//       </button> */}\n//       </div>\n      \n//     </div>\n//   );\n// };\n\n// export default LowerObjLine;"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}