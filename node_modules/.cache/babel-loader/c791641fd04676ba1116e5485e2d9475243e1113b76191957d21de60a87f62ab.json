{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/animation/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const totalPoints = 7;\n  const containerWidth = window; // px (width of the line)\n  const pointSpacing = containerWidth / (totalPoints - 1);\n  const speed = 2; // px per frame\n\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentPointIndex, setCurrentPointIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (currentPointIndex < totalPoints) {\n        const targetPosition = currentPointIndex * pointSpacing;\n\n        // Move the object\n        if (currentPosition < targetPosition) {\n          setCurrentPosition(prevPosition => {\n            const nextPosition = prevPosition + speed;\n            return nextPosition > targetPosition ? targetPosition : nextPosition;\n          });\n        }\n\n        // Trigger popup when reaching the point\n        if (currentPosition === targetPosition) {\n          // alert(`Reached point ${currentPointIndex + 1}`);\n          setCurrentPointIndex(prevIndex => prevIndex + 1);\n        }\n      }\n    }, 20);\n    return () => clearInterval(intervalId);\n  }, [currentPosition, currentPointIndex, pointSpacing, totalPoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moving-object\",\n      style: {\n        left: `${currentPosition}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), Array.from({\n      length: totalPoints\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point\",\n      style: {\n        left: `${index * pointSpacing}px`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hTj6xcwGBPBnChszbrx6+Sndi54=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","totalPoints","containerWidth","window","pointSpacing","speed","currentPosition","setCurrentPosition","currentPointIndex","setCurrentPointIndex","intervalId","setInterval","targetPosition","prevPosition","nextPosition","prevIndex","clearInterval","className","children","style","left","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","_c","$RefreshReg$"],"sources":["/Users/neeraj/Desktop/animation/my-app/src/App.js"],"sourcesContent":["\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const totalPoints = 7;\n  const containerWidth = window; // px (width of the line)\n  const pointSpacing = containerWidth / (totalPoints - 1);\n  const speed = 2; // px per frame\n\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentPointIndex, setCurrentPointIndex] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (currentPointIndex < totalPoints) {\n        const targetPosition = currentPointIndex * pointSpacing;\n\n        // Move the object\n        if (currentPosition < targetPosition) {\n          setCurrentPosition((prevPosition) => {\n            const nextPosition = prevPosition + speed;\n            return nextPosition > targetPosition ? targetPosition : nextPosition;\n          });\n        }\n\n        // Trigger popup when reaching the point\n        if (currentPosition === targetPosition) {\n          // alert(`Reached point ${currentPointIndex + 1}`);\n          setCurrentPointIndex((prevIndex) => prevIndex + 1);\n        }\n      }\n    }, 20);\n\n    return () => clearInterval(intervalId);\n  }, [currentPosition, currentPointIndex, pointSpacing, totalPoints]);\n\n  return (\n    <div className=\"line-container\">\n      <div\n        className=\"moving-object\"\n        style={{ left: `${currentPosition}px` }}\n      ></div>\n      {Array.from({ length: totalPoints }, (_, index) => (\n        <div\n          key={index}\n          className=\"point\"\n          style={{ left: `${index * pointSpacing}px` }}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,WAAW,GAAG,CAAC;EACrB,MAAMC,cAAc,GAAGC,MAAM,CAAC,CAAC;EAC/B,MAAMC,YAAY,GAAGF,cAAc,IAAID,WAAW,GAAG,CAAC,CAAC;EACvD,MAAMI,KAAK,GAAG,CAAC,CAAC,CAAC;;EAEjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIH,iBAAiB,GAAGP,WAAW,EAAE;QACnC,MAAMW,cAAc,GAAGJ,iBAAiB,GAAGJ,YAAY;;QAEvD;QACA,IAAIE,eAAe,GAAGM,cAAc,EAAE;UACpCL,kBAAkB,CAAEM,YAAY,IAAK;YACnC,MAAMC,YAAY,GAAGD,YAAY,GAAGR,KAAK;YACzC,OAAOS,YAAY,GAAGF,cAAc,GAAGA,cAAc,GAAGE,YAAY;UACtE,CAAC,CAAC;QACJ;;QAEA;QACA,IAAIR,eAAe,KAAKM,cAAc,EAAE;UACtC;UACAH,oBAAoB,CAAEM,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;QACpD;MACF;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMC,aAAa,CAACN,UAAU,CAAC;EACxC,CAAC,EAAE,CAACJ,eAAe,EAAEE,iBAAiB,EAAEJ,YAAY,EAAEH,WAAW,CAAC,CAAC;EAEnE,oBACEH,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MACEmB,SAAS,EAAC,eAAe;MACzBE,KAAK,EAAE;QAAEC,IAAI,EAAE,GAAGd,eAAe;MAAK;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACNC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE1B;IAAY,CAAC,EAAE,CAAC2B,CAAC,EAAEC,KAAK,kBAC5C/B,OAAA;MAEEmB,SAAS,EAAC,OAAO;MACjBE,KAAK,EAAE;QAAEC,IAAI,EAAE,GAAGS,KAAK,GAAGzB,YAAY;MAAK;IAAE,GAFxCyB,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhDID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}