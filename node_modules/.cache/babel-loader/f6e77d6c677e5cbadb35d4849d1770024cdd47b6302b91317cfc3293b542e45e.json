{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/animation/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const totalPoints = 7;\n  const [containerWidth, setContainerWidth] = useState(window.innerWidth);\n  const pointSpacing = containerWidth / (totalPoints - 1);\n  const speed = 2; // px per frame\n\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentPointIndex, setCurrentPointIndex] = useState(0);\n  const [info, setInfo] = useState('');\n  useEffect(() => {\n    const handleResize = () => {\n      setContainerWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (currentPointIndex < totalPoints) {\n        const targetPosition = currentPointIndex * pointSpacing;\n\n        // Move the object\n        if (currentPosition < targetPosition) {\n          setCurrentPosition(prevPosition => {\n            const nextPosition = prevPosition + speed;\n            return nextPosition > targetPosition ? targetPosition : nextPosition;\n          });\n        }\n\n        // Trigger information display when reaching the point\n        if (currentPosition === targetPosition) {\n          setInfo(`Reached point ${currentPointIndex + 1}`);\n          setCurrentPointIndex(prevIndex => prevIndex + 1);\n        }\n      }\n    }, 20);\n    return () => clearInterval(intervalId);\n  }, [currentPosition, currentPointIndex, pointSpacing, totalPoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-container\",\n    style: {\n      width: `${containerWidth}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moving-object\",\n      style: {\n        left: `${currentPosition}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), Array.from({\n      length: totalPoints\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point\",\n      style: {\n        left: `${index * pointSpacing}px`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MlRH1VG1/vZeRwYw4HlmvTINMIc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FaInfoCircle","jsxDEV","_jsxDEV","App","_s","totalPoints","containerWidth","setContainerWidth","window","innerWidth","pointSpacing","speed","currentPosition","setCurrentPosition","currentPointIndex","setCurrentPointIndex","info","setInfo","handleResize","addEventListener","removeEventListener","intervalId","setInterval","targetPosition","prevPosition","nextPosition","prevIndex","clearInterval","className","style","width","children","left","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","_c","$RefreshReg$"],"sources":["/Users/neeraj/Desktop/animation/my-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport './App.css';\n\nconst App = () => {\n  const totalPoints = 7;\n  const [containerWidth, setContainerWidth] = useState(window.innerWidth);\n  const pointSpacing = containerWidth / (totalPoints - 1);\n  const speed = 2; // px per frame\n\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentPointIndex, setCurrentPointIndex] = useState(0);\n  const [info, setInfo] = useState('');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setContainerWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (currentPointIndex < totalPoints) {\n        const targetPosition = currentPointIndex * pointSpacing;\n\n        // Move the object\n        if (currentPosition < targetPosition) {\n          setCurrentPosition((prevPosition) => {\n            const nextPosition = prevPosition + speed;\n            return nextPosition > targetPosition ? targetPosition : nextPosition;\n          });\n        }\n\n        // Trigger information display when reaching the point\n        if (currentPosition === targetPosition) {\n          setInfo(`Reached point ${currentPointIndex + 1}`);\n          setCurrentPointIndex((prevIndex) => prevIndex + 1);\n        }\n      }\n    }, 20);\n\n    return () => clearInterval(intervalId);\n  }, [currentPosition, currentPointIndex, pointSpacing, totalPoints]);\n\n  return (\n    <div className=\"line-container\" style={{ width: `${containerWidth}px` }}>\n      <div className=\"moving-object\" style={{ left: `${currentPosition}px` }}></div>\n      {Array.from({ length: totalPoints }, (_, index) => (\n        <div key={index} className=\"point\" style={{ left: `${index * pointSpacing}px` }}>\n          {/* <FaInfoCircle className=\"icon\" /> */}\n        </div>\n      ))}\n      <div className=\"info-box\">{info}</div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}