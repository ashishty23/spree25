{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/animation/my-app/src/MovingObjectLine.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovingObjectLine = () => {\n  _s();\n  const [position, setPosition] = useState(0);\n  const [reachedPoints, setReachedPoints] = useState([]);\n  const totalPoints = 4;\n  const lineLength = 1500;\n  const pointSpacing = lineLength / totalPoints;\n\n  // Calculate points along the line\n  const points = Array.from({\n    length: totalPoints\n  }, (_, i) => ({\n    x: i * pointSpacing,\n    y: i * pointSpacing * 0.25,\n    // This creates the angle\n    number: i + 1\n  }));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(prev => {\n        if (prev >= lineLength) {\n          clearInterval(interval);\n          return prev;\n        }\n        return prev + 2;\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Check if we've reached a new point\n  useEffect(() => {\n    points.forEach(point => {\n      if (position >= point.x && !reachedPoints.includes(point.number)) {\n        setReachedPoints(prev => [...prev, point.number]);\n      }\n    });\n  }, [position, reachedPoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MovingObjectLine, \"fwasS6Z3q06a+Y4U7foWk0dnqI8=\");\n_c = MovingObjectLine;\nexport default MovingObjectLine;\nvar _c;\n$RefreshReg$(_c, \"MovingObjectLine\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovingObjectLine","_s","position","setPosition","reachedPoints","setReachedPoints","totalPoints","lineLength","pointSpacing","points","Array","from","length","_","i","x","y","number","interval","setInterval","prev","clearInterval","forEach","point","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/neeraj/Desktop/animation/my-app/src/MovingObjectLine.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MovingObjectLine = () => {\n  const [position, setPosition] = useState(0);\n  const [reachedPoints, setReachedPoints] = useState([]);\n  \n  const totalPoints = 4;\n  const lineLength = 1500;\n  const pointSpacing = lineLength / (totalPoints);\n  \n  // Calculate points along the line\n  const points = Array.from({ length: totalPoints }, (_, i) => ({\n    x: i * pointSpacing,\n    y: i * pointSpacing * 0.25, // This creates the angle\n    number: i + 1\n  }));\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition((prev) => {\n        if (prev >= lineLength) {\n          clearInterval(interval);\n          return prev;\n        }\n        return prev + 2;\n      });\n    }, 10);\n\n    return () => clearInterval(interval);\n  }, []);\n  \n  // Check if we've reached a new point\n  useEffect(() => {\n    points.forEach((point) => {\n      if (\n        position >= point.x && \n        !reachedPoints.includes(point.number)\n      ) {\n        setReachedPoints(prev => [...prev, point.number]);\n      }\n    });\n  }, [position, reachedPoints]);\n\n  return (\n    <div className=\"relative w-full h-full p-8\">\n      <div>\n        \n      </div>\n      \n    </div>\n  );\n};\n\nexport default MovingObjectLine;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,WAAW,GAAG,CAAC;EACrB,MAAMC,UAAU,GAAG,IAAI;EACvB,MAAMC,YAAY,GAAGD,UAAU,GAAID,WAAY;;EAE/C;EACA,MAAMG,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEN;EAAY,CAAC,EAAE,CAACO,CAAC,EAAEC,CAAC,MAAM;IAC5DC,CAAC,EAAED,CAAC,GAAGN,YAAY;IACnBQ,CAAC,EAAEF,CAAC,GAAGN,YAAY,GAAG,IAAI;IAAE;IAC5BS,MAAM,EAAEH,CAAC,GAAG;EACd,CAAC,CAAC,CAAC;EAEHjB,SAAS,CAAC,MAAM;IACd,MAAMqB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjChB,WAAW,CAAEiB,IAAI,IAAK;QACpB,IAAIA,IAAI,IAAIb,UAAU,EAAE;UACtBc,aAAa,CAACH,QAAQ,CAAC;UACvB,OAAOE,IAAI;QACb;QACA,OAAOA,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACdY,MAAM,CAACa,OAAO,CAAEC,KAAK,IAAK;MACxB,IACErB,QAAQ,IAAIqB,KAAK,CAACR,CAAC,IACnB,CAACX,aAAa,CAACoB,QAAQ,CAACD,KAAK,CAACN,MAAM,CAAC,EACrC;QACAZ,gBAAgB,CAACe,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,KAAK,CAACN,MAAM,CAAC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,QAAQ,EAAEE,aAAa,CAAC,CAAC;EAE7B,oBACEL,OAAA;IAAK0B,SAAS,EAAC,4BAA4B;IAAAC,QAAA,eACzC3B,OAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjDID,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}