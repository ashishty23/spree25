{"ast":null,"code":"var _jsxFileName = \"/Users/neeraj/Desktop/animation/my-app/src/LowerObjLine.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const LowerObjLine = () => {\n//   const [position, setPosition] = useState(0);\n//   const [reachedPoints, setReachedPoints] = useState([]);\n\n//   const totalPoints = 4;\n//   const lineLength = 1500;\n//   const pointSpacing = lineLength / (totalPoints);\n\n//   // Calculate points along the line\n//   const points = Array.from({ length: totalPoints }, (_, i) => ({\n//     x: i * pointSpacing,\n//     y: i * pointSpacing * [-0.25], // This creates the angle\n//     number: i + 1\n//   }));\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setPosition((prev) => {\n//         if (prev >= lineLength) {\n//           clearInterval(interval);\n//           return prev;\n//         }\n//         return prev + 2;\n//       });\n//     }, 10);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Check if we've reached a new point\n//   useEffect(() => {\n//     points.forEach((point) => {\n//       if (\n//         position >= point.x && \n//         !reachedPoints.includes(point.number)\n//       ) {\n//         setReachedPoints(prev => [...prev, point.number]);\n//       }\n//     });\n//   }, [position, reachedPoints]);\n\n//   return (\n//     <div className=\"relative w-full h-full p-8\">\n\n//       {/*---------------------------------- Lower Part-------------------------------------- */}\n\n//       <div>\n//         {/* Line */}\n//       <div \n//         className=\"absolute w-full h-14 z-[-10] bg-gray-300 \"\n//         style={{ \n//           left:0,\n//           right: 0,\n//           bottom: [2],\n//           transform: 'rotate(-15deg)',\n//           transformOrigin: '0 0',\n//           width: `${lineLength}px`\n//         }}\n//       />\n\n//       {/* Points */}\n//       {points.map((point) => (\n//         <div key={point.number} className=\"absolute\">\n//           {/* Point marker */}\n//           {/* <div \n//             className=\"w-4 h-4 bg-blue-500 rounded-full\"\n//             style={{\n//               left: point.x,\n//               top: point.y\n//             }}\n//           /> */}\n\n//           {/* Point label */}\n//           <div \n//             className=\"absolute text-sm font-bold\"\n//             style={{\n//               left: point.x - 20,\n//               top: point.y - 20\n//             }}\n//           >\n//             {/* Point {point.number} */}\n//           </div>\n\n//           {/* Reached message */}\n//           {reachedPoints.includes(point.number) && (\n//             <div \n//               className=\"absolute bg-green-500 text-white px-2 py-1 rounded\"\n//               style={{\n//                 left: point.x - 30,\n//                 top: point.y + 20\n//               }}\n//             >\n//               REACHED POINT {point.number}\n//             </div>\n//           )}\n//         </div>\n//       ))}\n\n//       {/* Moving object */}\n//       <div \n//         className=\"absolute h-20 w-20 transition-all duration-20 ease-linear \"\n//         style={{\n//           right: position,\n//           bottom: position * [-0.29],\n//           transform: 'translate(50%, 50%)'\n//         }}\n//       >\n//         <img src = \"/assets/auto2.png\" alt='' />\n//       </div>\n\n//       {/* Reset button */}\n//       {/* <button\n//         className=\"absolute top-4 right-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         onClick={() => {\n//           setPosition(0);\n//           setReachedPoints([]);\n//         }}\n//       >\n//         Reset\n//       </button> */}\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default LowerObjLine;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LowerObjLine = () => {\n  _s();\n  const [position, setPosition] = useState(1500); // Start from the maximum position\n  const [reachedPoints, setReachedPoints] = useState([]);\n  const totalPoints = 5;\n  const lineLength = 1500;\n  const pointSpacing = lineLength / totalPoints;\n\n  // Calculate points along the line (reversed order)\n  const points = Array.from({\n    length: totalPoints\n  }, (_, i) => ({\n    x: lineLength - i * pointSpacing,\n    // Reverse x position calculation\n    y: (lineLength - i * pointSpacing) * [-0.25],\n    // Adjust y calculation to match\n    number: totalPoints - i // Reverse point numbering\n  }));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(prev => {\n        if (prev <= 0) {\n          clearInterval(interval);\n          return prev;\n        }\n        return prev - 2; // Decrease position to move left\n      });\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Check if we've reached a new point\n  useEffect(() => {\n    points.forEach(point => {\n      if (position <= point.x && !reachedPoints.includes(point.number)) {\n        setReachedPoints(prev => [...prev, point.number]);\n      }\n    });\n  }, [position, reachedPoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute w-full h-14 z-[-10] bg-gray-300 \",\n        style: {\n          left: 0,\n          right: 0,\n          bottom: [2],\n          transform: 'rotate(-15deg)',\n          transformOrigin: '0 0',\n          width: `${lineLength}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), points.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute\",\n        children: reachedPoints.includes(point.number) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bg-green-500 text-white px-2 py-1 rounded\",\n          style: {\n            left: point.x - 30,\n            top: point.y + 20\n          },\n          children: [\"REACHED POINT \", point.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)\n      }, point.number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute h-20 w-20 transition-all duration-20 ease-linear\",\n        style: {\n          left: position,\n          // Changed from right to left\n          bottom: position * [0.29],\n          transform: 'translate(-50%, 50%)' // Adjusted transform to maintain car position\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/auto2.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), \"//       \", \"//       \", \"//\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(LowerObjLine, \"+Xn3KkItbqPzRx/SFfX2cLtpW0w=\");\n_c = LowerObjLine;\nexport default LowerObjLine;\nvar _c;\n$RefreshReg$(_c, \"LowerObjLine\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LowerObjLine","_s","position","setPosition","reachedPoints","setReachedPoints","totalPoints","lineLength","pointSpacing","points","Array","from","length","_","i","x","y","number","interval","setInterval","prev","clearInterval","forEach","point","includes","className","children","style","left","right","bottom","transform","transformOrigin","width","fileName","_jsxFileName","lineNumber","columnNumber","map","top","src","alt","_c","$RefreshReg$"],"sources":["/Users/neeraj/Desktop/animation/my-app/src/LowerObjLine.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const LowerObjLine = () => {\n//   const [position, setPosition] = useState(0);\n//   const [reachedPoints, setReachedPoints] = useState([]);\n  \n//   const totalPoints = 4;\n//   const lineLength = 1500;\n//   const pointSpacing = lineLength / (totalPoints);\n  \n//   // Calculate points along the line\n//   const points = Array.from({ length: totalPoints }, (_, i) => ({\n//     x: i * pointSpacing,\n//     y: i * pointSpacing * [-0.25], // This creates the angle\n//     number: i + 1\n//   }));\n  \n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setPosition((prev) => {\n//         if (prev >= lineLength) {\n//           clearInterval(interval);\n//           return prev;\n//         }\n//         return prev + 2;\n//       });\n//     }, 10);\n\n//     return () => clearInterval(interval);\n//   }, []);\n  \n//   // Check if we've reached a new point\n//   useEffect(() => {\n//     points.forEach((point) => {\n//       if (\n//         position >= point.x && \n//         !reachedPoints.includes(point.number)\n//       ) {\n//         setReachedPoints(prev => [...prev, point.number]);\n//       }\n//     });\n//   }, [position, reachedPoints]);\n\n//   return (\n//     <div className=\"relative w-full h-full p-8\">\n\n//       {/*---------------------------------- Lower Part-------------------------------------- */}\n\n//       <div>\n//         {/* Line */}\n//       <div \n//         className=\"absolute w-full h-14 z-[-10] bg-gray-300 \"\n//         style={{ \n//           left:0,\n//           right: 0,\n//           bottom: [2],\n//           transform: 'rotate(-15deg)',\n//           transformOrigin: '0 0',\n//           width: `${lineLength}px`\n//         }}\n//       />\n      \n//       {/* Points */}\n//       {points.map((point) => (\n//         <div key={point.number} className=\"absolute\">\n//           {/* Point marker */}\n//           {/* <div \n//             className=\"w-4 h-4 bg-blue-500 rounded-full\"\n//             style={{\n//               left: point.x,\n//               top: point.y\n//             }}\n//           /> */}\n          \n//           {/* Point label */}\n//           <div \n//             className=\"absolute text-sm font-bold\"\n//             style={{\n//               left: point.x - 20,\n//               top: point.y - 20\n//             }}\n//           >\n//             {/* Point {point.number} */}\n//           </div>\n          \n//           {/* Reached message */}\n//           {reachedPoints.includes(point.number) && (\n//             <div \n//               className=\"absolute bg-green-500 text-white px-2 py-1 rounded\"\n//               style={{\n//                 left: point.x - 30,\n//                 top: point.y + 20\n//               }}\n//             >\n//               REACHED POINT {point.number}\n//             </div>\n//           )}\n//         </div>\n//       ))}\n      \n//       {/* Moving object */}\n//       <div \n//         className=\"absolute h-20 w-20 transition-all duration-20 ease-linear \"\n//         style={{\n//           right: position,\n//           bottom: position * [-0.29],\n//           transform: 'translate(50%, 50%)'\n//         }}\n//       >\n//         <img src = \"/assets/auto2.png\" alt='' />\n//       </div>\n      \n//       {/* Reset button */}\n//       {/* <button\n//         className=\"absolute top-4 right-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         onClick={() => {\n//           setPosition(0);\n//           setReachedPoints([]);\n//         }}\n//       >\n//         Reset\n//       </button> */}\n//       </div>\n      \n//     </div>\n//   );\n// };\n\n// export default LowerObjLine;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst LowerObjLine = () => {\n  const [position, setPosition] = useState(1500); // Start from the maximum position\n  const [reachedPoints, setReachedPoints] = useState([]);\n  \n  const totalPoints = 5;\n  const lineLength = 1500;\n  const pointSpacing = lineLength / (totalPoints);\n  \n  // Calculate points along the line (reversed order)\n  const points = Array.from({ length: totalPoints }, (_, i) => ({\n    x: lineLength - (i * pointSpacing), // Reverse x position calculation\n    y: (lineLength - (i * pointSpacing)) * [-0.25], // Adjust y calculation to match\n    number: totalPoints - i // Reverse point numbering\n  }));\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition((prev) => {\n        if (prev <= 0) {\n          clearInterval(interval);\n          return prev;\n        }\n        return prev - 2; // Decrease position to move left\n      });\n    }, 10);\n\n    return () => clearInterval(interval);\n  }, []);\n  \n  // Check if we've reached a new point\n  useEffect(() => {\n    points.forEach((point) => {\n      if (\n        position <= point.x && \n        !reachedPoints.includes(point.number)\n      ) {\n        setReachedPoints(prev => [...prev, point.number]);\n      }\n    });\n  }, [position, reachedPoints]);\n\n  return (\n    <div className=\"relative w-full h-full p-8\">\n      <div>\n        {/* Line */}\n        <div \n           className=\"absolute w-full h-14 z-[-10] bg-gray-300 \"\n                   style={{ \n                     left:0,\n                     right: 0,\n                     bottom: [2],\n                     transform: 'rotate(-15deg)',\n                     transformOrigin: '0 0',\n                     width: `${lineLength}px`\n                   }}\n        />\n      \n        {/* Points */}\n        {points.map((point) => (\n          <div key={point.number} className=\"absolute\">\n            {/* Reached message */}\n            {reachedPoints.includes(point.number) && (\n              <div \n                className=\"absolute bg-green-500 text-white px-2 py-1 rounded\"\n                style={{\n                  left: point.x - 30,\n                  top: point.y + 20\n                }}\n              >\n                REACHED POINT {point.number}\n              </div>\n            )}\n          </div>\n        ))}\n      \n        {/* Moving object */}\n        <div \n          className=\"absolute h-20 w-20 transition-all duration-20 ease-linear\"\n          style={{\n            left: position, // Changed from right to left\n            bottom: position * [0.29],\n            transform: 'translate(-50%, 50%)' // Adjusted transform to maintain car position\n          }}\n        >\n          <img src=\"/assets/auto2.png\" alt=\"\" />\n        </div>\n      </div>\n\n      //       {/* Reset button */}\n//       {/* <button\n//         className=\"absolute top-4 right-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         onClick={() => {\n//           setPosition(0);\n//           setReachedPoints([]);\n//         }}\n//       >\n//         Reset\n//       </button> */}\n//       \n    </div>\n  );\n};\n\nexport default LowerObjLine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}